# prefix for tags in git
tagPrefix: v
# defaults are used if they are not overriden by a branch config
defaults {
  # whether to really tag the branch when `git mkver tag` is called
  tag: true
  # message for annotated version tags in    git
  tagMessageFormat: "release {Tag}"
  # format tring for the pre-release. The format must end with {PreReleaseNumber} if it is used.
  # Examples:
  # * alpha
  # * SNAPSHOT
  # * RC{PreReleaseNumber}
  # * pre-{CommitsSinceTag}
  whenNoValidCommitMessages: IncrementMinor
  # # list of patches to be applied when `git mkver patch` is called
  patches: [
    GenericSemVer
  ]
  includeBuildMetaData: false
}
# patches control how files are updated
patches: [
  {
    name: GenericSemVer
    filePatterns: [".semver"]
    replacements: [
      {
        find: ".+"
        replace: "{Next}"
      }
    ]
  }
]
# commitMessageActions configure how different commit messages will increment
# the version number
commitMessageActions: [
  {
    # pattern is a regular expression to occur in a single line
    pattern: "((BREAKING CHANGE)|.+!:).+"
    # action is one of:
    # * Fail - application will exit
    # * IncrementMajor - bump the major version
    # * IncrementMinor - bump the minor version
    # * IncrementPatch - bump the patch version
    # * NoIncrement - no version change will occur
    action: IncrementMajor
  }
  {
    pattern: "major(\\(.+\\))?:"
    action: IncrementMajor
  }
]